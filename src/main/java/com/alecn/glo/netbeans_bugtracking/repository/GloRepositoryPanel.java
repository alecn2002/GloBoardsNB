/*
 * The MIT License
 *
 * Copyright 2019 anovitsk.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package com.alecn.glo.netbeans_bugtracking.repository;

import com.alecn.glo.sojo.Board;

/**
 *
 * @author anovitsk
 */
class GloRepositoryPanel extends javax.swing.JPanel {

    private final transient GloRepositoryController controller;

    /**
     * Creates new form GloRepositoryPanel
     */
    GloRepositoryPanel(GloRepositoryController controller) {
        this.controller = controller;
        initComponents();
    }

    void setSelectedBoard(Board board) {
        if (gloRepoBoard.getModel() == null) {
            return;
        }
        gloRepoBoard.getModel().setSelectedItem(board);
    }

    Board getSelectedBoard() {
        if (gloRepoBoard.getModel() == null) {
            return null;
        }
        return (Board)gloRepoBoard.getModel().getSelectedItem();
    }

    void setNameText(String displayName) {
        gloRepositoryName.setText(displayName);
    }

    String getNameText() {
        return gloRepositoryName.getText();
    }

    void setAccessKey(String accessKey) {
        gloRepoAccessKey.setText(accessKey);
    }

    String getAccessKey() {
        return gloRepoAccessKey.getText();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        gloRepositoryName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        gloRepoAccessKey = new javax.swing.JTextField();
        verifyButton = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        gloRepoBoard = new javax.swing.JComboBox<>();

        org.openide.awt.Mnemonics.setLocalizedText(jLabel1, org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.jLabel1.text")); // NOI18N

        gloRepositoryName.setText(org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.gloRepositoryName.text")); // NOI18N
        gloRepositoryName.setToolTipText(org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.gloRepositoryName.toolTipText")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(jLabel2, org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.jLabel2.text")); // NOI18N

        gloRepoAccessKey.setText(org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.gloRepoAccessKey.text")); // NOI18N

        org.openide.awt.Mnemonics.setLocalizedText(verifyButton, org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.verifyButton.text")); // NOI18N
        verifyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyButtonActionPerformed(evt);
            }
        });

        org.openide.awt.Mnemonics.setLocalizedText(jLabel3, org.openide.util.NbBundle.getMessage(GloRepositoryPanel.class, "GloRepositoryPanel.jLabel3.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gloRepositoryName))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(gloRepoAccessKey))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addComponent(gloRepoBoard, 0, 753, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(verifyButton, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(gloRepositoryName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(gloRepoAccessKey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(verifyButton)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(gloRepoBoard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void verifyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_verifyButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    javax.swing.JTextField gloRepoAccessKey;
    javax.swing.JComboBox<Board> gloRepoBoard;
    javax.swing.JTextField gloRepositoryName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    javax.swing.JButton verifyButton;
    // End of variables declaration//GEN-END:variables
}
